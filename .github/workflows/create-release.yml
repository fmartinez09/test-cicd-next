name: Crear rama release, tag, y fusionar a main

on:
  push:
    branches:
      - develop
    paths:
      - 'package.json'

jobs:
  create-release-branch:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      - name: Leer la versión desde package.json
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "La versión actual del package.json es: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          release_name="release/$VERSION"
          echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

      - name: Verificar y crear la rama release si no existe
        run: |
          git fetch origin
          if git show-ref --verify --quiet refs/heads/${{ env.RELEASE_NAME }} || git ls-remote --exit-code --heads origin ${{ env.RELEASE_NAME }}; then
            echo "La rama ${{ env.RELEASE_NAME }} ya existe. No se creará una nueva."
          else
            git checkout develop
            git checkout -b ${{ env.RELEASE_NAME }}
            git push -u origin ${{ env.RELEASE_NAME }}
          fi

      - name: Crear el tag y asociarlo con el release
        run: |
          echo "Branch actual: ${{ env.RELEASE_NAME }}"
          echo "Versión: $VERSION"
          
          git fetch origin ${{ env.RELEASE_NAME }}
          git checkout ${{ env.RELEASE_NAME }}
          
          if git tag -l | grep -q "^$VERSION$"; then
            echo "El tag $VERSION ya existe. No se creará un nuevo tag."
          else
            git tag $VERSION
            echo "Tag $VERSION creado localmente."
          fi
          
          git push origin $VERSION

      - name: Crear el Release en GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

      - name: Fusionar la rama release/* a main
        run: |
          git fetch origin main
          git checkout main
          git merge ${{ env.RELEASE_NAME }} --no-ff -m "Fusionando la rama ${{ env.RELEASE_NAME }} a main"
          git push origin main

      - name: Notificar la creación de la rama y el tag
        run: |
          echo "La rama ${{ env.RELEASE_NAME }} fue procesada exitosamente."
          echo "El tag $VERSION fue creado y subido."
          echo "La rama ${{ env.RELEASE_NAME }} fue fusionada con main."
